# Based on
# https://github.com/python/typing_extensions/blob/main/.github/workflows/publish.yml and
# https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Test builds and publish Python distribution to PyPI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: pipx install poetry
      - name: Build release
        run: poetry build
      - name: Upload the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test-wheel:
    name: Test wheel
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      - name: Download release dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Install wheel
        run: |
          export path_to_file=$(find dist -type f -name "problem_bank_helpers-*.whl")
          echo "::notice::Installing wheel: $path_to_file"
          python -m pip install --user $path_to_file
          python -m pip list
      - name: Install test dependencies
        run: python -m pip install --user pytest
      - name: Run tests against installed wheel
        run: rm -rf src/ && pytest tests/

  test-sdist:
    name: Test sdist
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      - name: Download release dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Install sdist
        run: |
          export path_to_file=$(find dist -type f -name "problem_bank_helpers-*.tar.gz")
          echo "::notice::Installing sdist: $path_to_file"
          python -m pip install --user $path_to_file
          python -m pip list
      - name: Install test dependencies
        run: python -m pip install --user pytest
      - name: Run tests against installed sdist
        run: rm -rf src/ && pytest tests/

  test-banks:
    name: Test Problem Banks Build
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # We want to know all issues, even if one fails
      matrix:
        repo: # If more problem banks are ever created, add them here
          - instructor_physics_bank
          - instructor_datascience_bank
          - instructor_stats_bank
    steps:
      - name: Checkout ${{ matrix.repo }}
        uses: actions/checkout@v4
        with:
          repository: open-resources/${{ matrix.repo }}
          token: ${{ secrets.API_TOKEN_GITHUB }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      - name: Download release dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Install Problem Bank Dependencies
        run: |
          python -m pip install --upgrade --upgrade-strategy eager -r requirements.txt
          python -m pip install --upgrade problem_bank_scripts
      - name: Install built wheel
        run: |
          python -m pip uninstall -y problem_bank_helpers
          export path_to_file=$(find dist -type f -name "problem_bank_helpers-*.whl")
          echo "::notice::Installing wheel: $path_to_file"
          python -m pip install --user $path_to_file
          python -m pip list
      - name: Test problem bank generates properly
        run: python scripts/process.py 'source' --instructor=True --public=True --prairielearn=True

  publish:
    name: Publish new release to PyPI
    if: github.event_name == 'release' # only publish to PyPI on releases
    needs:  # Ensure build and tests have passed before publishing
      - build
      - test-wheel
      - test-sdist
      - test-banks
    runs-on: ubuntu-latest
    # Specifying a GitHub environment so manual approval by an approved user to create a release is required
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: publish
      url: https://pypi.org/p/problem-bank-helpers/
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      # https://docs.pypi.org/trusted-publishers/
      id-token: write
    steps:
      - name: Download release dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Ensure exactly one sdist and one wheel have been downloaded
        run: test $(ls dist/*.tar.gz | wc -l) = 1 && test $(ls dist/*.whl | wc -l) = 1
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  
  github-release:
    name: upload dists to GitHub release
    needs: [publish]
    permissions:
      id-token: write
      attestations: write
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download release dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/**'
      - name: Upload Dists to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
    
  push-to-question-banks:
    uses: ./.github/workflows/update-dependents.yml
    needs: [publish]
    with:
      version: ${{ github.event.release.tag_name }}